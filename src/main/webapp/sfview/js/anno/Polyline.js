import Rectangle from"/sfview/js/anno/Rectangle.js";export default class Polyline extends Rectangle{pts=new Array;constructor(strokeStyle="#29008B"){super(0,0,0,0,null,strokeStyle,(function(ctx){if(this.pts.length>1){let[x,y]=this.pts[0];ctx.moveTo(x,y);for(let i=1;i<this.pts.length;i++){[x,y]=this.pts[i];ctx.lineTo(x,y)}}}))}add(x,y){this.pts.push([Math.round(x),Math.round(y)])}moveStep(sx,sy){super.moveStep(sx,sy);for(let i=0;i<this.pts.length;i++){this.pts[i][0]+=sx;this.pts[i][1]+=sy}}sizeStep(sw,sh){if(this.width+sw==0||this.height+sh==0)return;if(this.width==0||this.height==0){super.sizeStep(sw,sh)}else{let[rw,rh]=[sw/this.width,sh/this.height];super.sizeStep(sw,sh);for(let i=0;i<this.pts.length;i++){let[x,y]=this.pts[i];this.pts[i]=[x+(x-this.x)*rw,y+(y-this.y)*rh]}}}normalize(){if(this.pts.length>1){let[x,y]=this.pts[0];let minX=x,minY=y,maxX=x,maxY=y;let i=1;while(i<this.pts.length){const[ox,oy]=[x,y];[x,y]=this.pts[i];if(Math.abs(x-ox)+Math.abs(y-oy)<4){this.pts.splice(i,1);continue}if(minX>x){minX=x}else if(maxX<x){maxX=x}if(minY>y){minY=y}else if(maxY<y){maxY=y}i++}[this.x,this.y,this.width,this.height]=[minX,minY,maxX-minX,maxY-minY]}}setJson(json){super.setJson(json);this.strokeStyle=this.fillStyle;this.fillStyle=null;this.pts.length=0;json.points.forEach((point=>{this.add(point.x+this.x,point.y+this.y)}));this.normalize()}getJson(){let json=super.getJson();json.points=this.pts.map((point=>({x:point[0]-this.x,y:point[1]-this.y})));json.style={color:this.strokeStyle,with:this.lineWidth};delete json.style.stroke;return json}}