import Rectangle from"/sfview/js/anno/Rectangle.js";import Anno from"/sfview/js/anno/Anno.js";import Font from"/sfview/js/anno/Font.js";import TextDecoration from"/sfview/js/anno/TextDecoration.js";export default class Text extends Rectangle{static textArea;static curText;text="";fontColor;font;textDecoration;textAlign="left";constructor(x,y,width,height,fillStyle,strokeStyle,fontColor){super(x,y,width,height,fillStyle,strokeStyle,(function(ctx){ctx.rect(this.x,this.y,this.width,this.height);if(this.fillStyle)ctx.fill();if(this.strokeStyle)ctx.stroke();ctx.beginPath();const text=this.text;if(text==null||text.length==0)return;const td=this.textDecoration;const paddingWidth=this.lineWidth/2;const inWidth=this.width-this.lineWidth;this.font.applyCtx(ctx);const lineHeight=this.font.calcLineHeight();const startY=this.font.size;let startX=0;switch(this.textAlign){case"left":ctx.textAlign="start";startX=0;break;case"center":ctx.textAlign="center";startX=this.width/2;break;case"right":ctx.textAlign="end";startX=this.width;break;default:console.err("setAlign() parameter error:"+this.textAlign);ctx.textAlign="start";startX=0;break}ctx.fillStyle=this.fontColor;ctx.strokeStyle=this.fontColor;ctx.lineWidth=Math.round(this.font.size/10);let x=this.x+startX+paddingWidth;let y=this.y+startY+paddingWidth+ctx.lineWidth/3;for(let nline of text.split("\n")){let line="";for(let word of nline.split(" ")){let prevLine=line;line+=line.trim()==""?word==""?" ":word:" "+word;if(prevLine!=""&&ctx.measureText(prevLine).width<inWidth&&ctx.measureText(line).width>inWidth){td.fillText(ctx,prevLine,x,y);y+=lineHeight;line=word}while(ctx.measureText(line).width>inWidth){for(let i=1;i<=line.length;i++){if(ctx.measureText(line.substring(0,i)).width>inWidth){if(i==1){console.log("too small text width:"+inWidth);return}td.fillText(ctx,line.substring(0,i-1),x,y);y+=lineHeight;line=line.substring(i-1);break}}}}td.fillText(ctx,line,x,y);y+=lineHeight}ctx.stroke()}));this.font=new Font;this.fontColor=fontColor;this.textDecoration=new TextDecoration(this.font)}setFocus(){Text.textArea.value=this.text;const style=Text.textArea.style;const[x,y]=Anno.getLocation();const paddingWidth=this.lineWidth/2;style.display="inline-block";style.left=this.x*Anno.ratio+this.width/2*(Anno.ratio-1)+paddingWidth+x+"px";style.top=this.y*Anno.ratio+this.height/2*(Anno.ratio-1)+paddingWidth+y+"px";style.transform=`scale(${Anno.ratio}) rotate(${this.angle}rad)`;style.width=this.width-this.lineWidth+"px";style.height=this.height-this.lineWidth+"px";style.margin=0;style.background=this.fillStyle;style.color=this.fontColor;style.textAlign=this.textAlign;this.font.applyStyle(style);this.textDecoration.applyStyle(style);Text.textArea.focus();Text.curText=this}lostFocus(){Text.textArea.style.display="none";this.text=Text.textArea.value;Text.curText=null;this.draw(Anno.ctx)}setText(text){this.text=text}setJson(json){super.setJson(json);this.text=json.text.replace("\\n","\n");const style=json.style.text;this.fontColor=style.color;this.textAlign=style.align;this.font.setJson(style);this.textDecoration.setJson(style)}getJson(){const json=super.getJson();json.text=this.text.replace("\n","\\n");json.style.text=this.font.getJson();json.style.text.color=this.fontColor;json.style.text.align=this.textAlign;return json}static initTextArea(){Text.textArea=document.createElement("TEXTAREA");document.body.appendChild(Text.textArea);Text.textArea.addEventListener("focusout",(function(){if(Text.curText)Text.curText.lostFocus()}));let style=Text.textArea.style;style.display="none";style.position="absolute";style.resize="none";style.overflow="hidden";style.padding=0;style.margin=0;style.border=0}static hide(){if(this.curText!=null){this.curText.lostFocus()}}}